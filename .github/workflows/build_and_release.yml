name: Release

on:
  push:
    tags:
      - v*

jobs:
  Build-amd64:
    name: Build NUCTool on amd64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.9]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get tag
        id: tag
        shell: bash
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build
        run: pyinstaller db_cookies.py --name db_cookies --onefile

      - name: Package
        run: tar -zcvf NUCtool-CLI-${{ steps.tag.outputs.tag }}-${{ runner.os }}-amd64.tar.gz -C dist/ .

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: NUCtool-CLI-${{ steps.tag.outputs.tag }}-${{ runner.os }}-amd64
          path: NUCtool-CLI-${{ steps.tag.outputs.tag }}-${{ runner.os }}-amd64.tar.gz

  Release:
    needs: Build-amd64
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get tag
        id: tag
        shell: bash
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Download all release files
        uses: actions/download-artifact@v2
        with:
          path: releases/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: releases/**/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
